<?xml version="1.0"?>
<launch>
  <!-- Gazebo options -->
  <arg name="gazebo_gui" default="true" doc="Start Gazebo GUI"/>
  <arg name="paused" default="false" doc="Start Gazebo paused"/>
  <arg name="world_name" default="$(find alpaka_demo)/include/world/calibration.world" doc="Gazebo world file"/>
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
  <arg name="initial_joint_positions" default=" -J elbow_joint 0 -J shoulder_lift_joint -1.5707 -J shoulder_pan_joint 0 -J wrist_1_joint -1.5707 -J wrist_2_joint 0 -J wrist_3_joint 0" doc="Initial joint configuration of the robot"/>
  <arg name="stopped_controllers" default="joint_group_eff_controller"/>
  <arg name="use_sim_time" default="true" />
  <arg name="enable_noise" default="false" />
  
  <!-- Start Gazebo paused to allow the controllers to pickup the initial pose -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
    <arg name="paused" value="true"/>
  </include>

   <!-- If enable_noise is true, load the noisy URDF -->
  <param name="robot_description" textfile="$(find ur5e_laser_sim)/config/noise_ur5e_laser_robot.urdf" if="$(arg enable_noise)"/>

  <!-- If enable_noise is false, load the normal URDF -->
  <param name="robot_description" textfile="$(find ur5e_laser_sim)/config/gazebo_ur5e_laser_robot.urdf" unless="$(arg enable_noise)"/>
  <!-- <param name="robot_description" textfile="$(find ur5e_laser_sim)/config/gazebo_ur5e_laser_robot.urdf" /> -->

  <!-- Unpause the simulation after loading the robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

  <!-- Spawn the robot in Gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)"
    respawn="false" output="screen" />

  <!-- Load the controller parameters onto the parameter server -->
  <rosparam file="$(find ur5e_laser_sim)/config/gazebo_controller_custom.yaml" />
  <!-- <include file="$(dirname)/ros_controllers.launch"/> -->

  <!-- Spawn the Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller eff_joint_traj_controller" />

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Load other controllers, but do not start them -->
  <node name="ros_control_stopped_spawner" pkg="controller_manager" type="spawner"
    args="--stopped $(arg stopped_controllers)" output="screen" respawn="false" />
</launch>
